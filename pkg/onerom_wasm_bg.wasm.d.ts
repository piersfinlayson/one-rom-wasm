/* tslint:disable */
/* eslint-disable */
export const memory: WebAssembly.Memory;
export const init: () => void;
export const version: () => [number, number];
export const __wbg_versioninfo_free: (a: number, b: number) => void;
export const versioninfo_onerom_wasm: (a: number) => [number, number];
export const versioninfo_onerom_config: (a: number) => [number, number];
export const versioninfo_onerom_gen: (a: number) => [number, number];
export const versioninfo_sdrr_fw_parser: (a: number) => [number, number];
export const versioninfo_metadata_version: (a: number) => [number, number];
export const versions: () => number;
export const parse_firmware: (a: number, b: number) => any;
export const mcus: () => [number, number];
export const mcu_info: (a: number, b: number) => [number, number, number];
export const rom_types: () => [number, number];
export const rom_type_info: (a: number, b: number) => [number, number, number];
export const boards: () => [number, number, number, number];
export const mcu_flash_base: (a: number, b: number) => [number, number, number];
export const board_info: (a: number, b: number) => [number, number, number];
export const __wbg_valueprettypair_free: (a: number, b: number) => void;
export const valueprettypair_value: (a: number) => [number, number];
export const valueprettypair_pretty: (a: number) => [number, number];
export const boards_for_mcu_family: (a: number, b: number) => [number, number, number, number];
export const mcus_for_mcu_family: (a: number, b: number) => [number, number, number, number];
export const mcu_chip_id: (a: number, b: number) => [number, number, number, number];
export const __wbg_wasmgenbuilder_free: (a: number, b: number) => void;
export const __wbg_wasmimages_free: (a: number, b: number) => void;
export const wasmimages_metadata: (a: number) => [number, number];
export const wasmimages_firmware_images: (a: number) => [number, number];
export const gen_builder_from_json: (a: number, b: number) => [number, number, number];
export const gen_file_specs: (a: number) => [number, number];
export const gen_licenses: (a: number) => [number, number];
export const accept_license: (a: number, b: any) => [number, number];
export const gen_add_file: (a: number, b: number, c: number, d: number) => [number, number];
export const gen_build: (a: number, b: any) => [number, number, number];
export const gen_description: (a: number) => [number, number];
export const gen_categories: (a: number) => [number, number];
export const gen_build_validation: (a: number, b: any) => [number, number];
export const __wbindgen_malloc: (a: number, b: number) => number;
export const __wbindgen_realloc: (a: number, b: number, c: number, d: number) => number;
export const __wbindgen_exn_store: (a: number) => void;
export const __externref_table_alloc: () => number;
export const __wbindgen_export_4: WebAssembly.Table;
export const __wbindgen_free: (a: number, b: number, c: number) => void;
export const __wbindgen_export_6: WebAssembly.Table;
export const __externref_drop_slice: (a: number, b: number) => void;
export const __externref_table_dealloc: (a: number) => void;
export const closure77_externref_shim: (a: number, b: number, c: any) => void;
export const closure166_externref_shim: (a: number, b: number, c: any, d: any) => void;
export const __wbindgen_start: () => void;
